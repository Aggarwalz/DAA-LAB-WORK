Q-1:
#include<stdio.h>
void main()
{
    int i,j,n,a[20],t;
    int k=0,c=0;
    printf("Enter no. of test cases:");
    scanf("%d",&t);
    for(j=0;j<t;j++)
    {
     printf("Enter size:");
     scanf("%d",&n);
     printf("Enter elements:");
     for(i=0;i<n;i++)
     {
        scanf("%d",&a[i]);
     }
     printf("Enter the key:");
     scanf("%d",&k);
     for(i=0;i<n;i++)
     {
        if(a[i]==k)
            c++;
     }
     if(c!=0)
     {
        printf("Key found\n");
        printf("Number of %d = %d",k,c);
     }
     else
     {
        printf("Key not found");
     }
    }
}

INPUT:
Enter no. of test cases:2
Enter size:6
Enter elements:5 7 5 8 9 11 13
Enter key:5

Enter size:7
Enter elements:63 14 97 83 52 80 48
Enter key:25

OUTPUT:
Key found
Number of 5=2

Key not found

Q-2:
#include<iostream>
using namespace std;
void getTriplet(int arr[], int n)
{
    for(int k=n-1;k>=0;k--)
    {
        int j=0;
        int i=k-1;
        while(j<i)
        {
           if(arr[i]+arr[j]==arr[k])
           {
               cout<<"The numbers are= "<<arr[i]<<" "<<arr[j]<<" "<<arr[k]<<endl;
               return;
           }
           else if(arr[i]+arr[j]<arr[k])
           j=j+1;
           else
           i=i-1;
        }
    }
    cout<<"No such triplet exists";
}
int main()
{
    int arr[20],n,i;
    cout<<"Enter size:";
    cin>>n;
    cout<<"Enter elements:";
    for(i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    getTriplet(arr,n);
}

INPUT:
Enter size: 5
Enter elements: 4 5 7 7 8
OUTPUT:
No suck triplet exists

Q-3:
#include<stdio.h>
void main()
{
    int a[20],n,i,j,k;
    printf("Enter limit:");
    scanf("%d",&n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    printf("Enter key:");
    scanf("%d",&k);
    int t=0;
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if((a[i]-a[j]==k))||(a[j]-a[i]==k))
            t++;
        }
    }
    if(t!=0)
    {
        printf("Pair exists");
        printf("Number of pairs= %d",t);
    }
    else
    printf("No pair exists");
}

INPUT:
Enter limit:5
Enter elements: 7 4 3 5 1

OUTPUT:
Pair exists
Number of pairs= 1
